<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

///Game variables
skin_r=255
skin_g=255
skin_b=255
ultimate_selected=-1
inst=-1
monitor_aspect_ratio=16/9
native_w=window_get_height()*monitor_aspect_ratio
native_h=window_get_height()

///Load skin
load_custom_player()

///System variables
debug=false
sys_paused=false
audio_disabled=false
star_percentage=0.2
application_surface_draw_enable(false)

///Graphics
vsync=false
aa_level=0
aa_max=0
rendering_scale=1
display_mode=0
switch(display_aa){
    case 2:{aa_max=2;break;}
    case 6:{aa_max=4;break;}
    case 14:{aa_max=8;break;}
    default:{aa_max=0;break;}
}

///Gamepad
gamepad_sup=gamepad_is_supported()
gamepad_num=gamepad_get_device_count()
gamepad_con=0
gamepad[0]=false
for(var i=0;i&lt;gamepad_num;i++){
    gamepad_set_axis_deadzone(i,0.05)
    if(gamepad_is_connected(i)&amp;&amp;os_type!=os_android){
        gamepad[i]=true
        gamepad_con++
    }
    else{gamepad[i]=false}
}
for(var i=1;i&lt;=room_last;i++){
  if(room_exists(i)){
    room_set_view(i,0,true,0,0,1920,1080,0,0,window_get_width(),window_get_height(),0,0,0,0,-1);
    room_set_view_enabled(i,true);
  }
}

///Loading variables
ini_open("settings.ini")
skin_r=ini_read_real("settings","skin_r",skin_r)
skin_g=ini_read_real("settings","skin_g",skin_g)
skin_b=ini_read_real("settings","skin_b",skin_b)
vsync=ini_read_real("settings","vsync",vsync)
aa_level=ini_read_real("settings","aa_level",aa_level)
debug=ini_read_real("settings","debug",debug)
display_mode=ini_read_real("settings","display_mode",display_mode)
ultimate_selected=ini_read_real("settings","ultimate_selected",ultimate_selected)
rendering_scale=ini_read_real("settings","rendering_scale",rendering_scale)
audio_disabled=ini_read_real("settings","audio_disabled",audio_disabled)
star_percentage=ini_read_real("settings","star_percentage",star_percentage)
ini_close()

///Execute graphics settings
apply_gfx(vsync,aa_level,display_mode)
apply_sound(audio_disabled)
save_settings()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step
sys_paused=(os_is_paused()||!window_has_focus())
if(room==r_options){
    skin_r=255*obj_rslide.percentage
    skin_g=255*obj_gslide.percentage
    skin_b=255*obj_bslide.percentage
}
if(room==r_options_extra){
    if(star_percentage!=obj_starslide.percentage){
        star_percentage=obj_starslide.percentage
        with(obj_starcontroller){
            event_user(1)
            event_user(0)
        }
    }
}
if(os_type!=os_android){
    for(var i=0;i&lt;gamepad_num;i++){
        if(gamepad_is_connected(i)&amp;&amp;!gamepad[i]){
            gamepad[i]=true
            gamepad_con++
        }
        else if(!gamepad_is_connected(i)&amp;&amp;gamepad[i]){
            gamepad[i]=false
            gamepad_con--
        }
    }
}

if(room==r_endless){
    randomize()
    if(random(100)&lt;=0.001){
        instance_create(0,0,obj_box)
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

if(instance_exists(obj_timestop)){
    shader_set(sh_invert_color_radial)
    shader_params_1=shader_get_uniform(sh_invert_color_radial,"u_vParams")
    shader_set_uniform_f(shader_params_1,obj_timestop.range/room_width)
    draw_app_surface()
}
draw_app_surface()
window_set_colour(background_color)
shader_reset()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI
if(sys_paused||(instance_exists(obj_pausebutton)&amp;&amp;obj_pausebutton.game_paused)){
    if(inst==-1){
        inst=instance_create(room_width/2,room_height/2,obj_txt)
        inst.always_on=true
        inst.txt="Game Paused"
    }
}
else{
    if(inst!=-1){
        with(inst){instance_destroy()}
        inst=-1
    }
}
if(debug){
    draw_set_alpha(0.9)
    draw_set_color(c_red)
    draw_text_transformed(8,8,"fps: "+string(floor(fps)),0.5,0.5,0)
    draw_text_transformed(8,40,"fps_real: "+string(floor(fps_real)),0.5,0.5,0)
    draw_text_transformed(8,72,"display_aa: "+string(floor(display_aa)),0.5,0.5,0)
    draw_text_transformed(8,104,"gamepads: "+string(floor(gamepad_con)),0.5,0.5,0)
    draw_text_transformed(8,136,"instances: "+string(floor(instance_count)),0.5,0.5,0)
    draw_text_transformed(8,168,"u_timer: "+string(floor(obj_ultimatecontroller.utimer)),0.5,0.5,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

if(room==r_menu){
    if(gamepad_con){
        draw_sprite_ext(spr_controller,0,660,896,3,3,0,make_color_rgb(100,100,100),1)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
