<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

///Variables
choosed=false
live=10

///Start time
timer=0
time_passed=0

///Create preset turrets
instance_create(room_width/2,room_height/2,obj_plr)
turret_1=instance_create(room_width/2,64,obj_eaimturret)
turret_2=instance_create(room_width/2,939,obj_eaimturret)
turret_3=instance_create(1856,939,obj_eaimturret)
turret_4=instance_create(1856,64,obj_eaimturret)
turret_5=instance_create(1856,room_height/2-45,obj_eaimturret)
turret_6=instance_create(64,64,obj_eaimturret)
turret_7=instance_create(64,939,obj_eaimturret)
turret_8=instance_create(64,room_height/2-45,obj_eaimturret)

///Walls
for(var i=16;i&lt;=1920;i+=32){
    instance_create(i,16,obj_wall)
    instance_create(i,992,obj_wall)
}
for(var i=48;i&lt;=992;i+=32){
    instance_create(16,i,obj_wall)
    instance_create(1904,i,obj_wall)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

if(!obj_gamemanager.sys_paused&amp;&amp;instance_exists(obj_pausebutton)&amp;&amp;!obj_pausebutton.game_paused&amp;&amp;!choosed&amp;&amp;get_active_ult()!=0){
    timer+=delta_time/1000000
    obj_statscontroller.stats_val[1]+=delta_time/1000000
    if(!obj_cheatscontroller.cheats_active){
        obj_statscontroller.stats_val[3]=max(obj_statscontroller.stats_val[3],time_passed)
    }
    if(timer&gt;=1){
        timer--
        randomize()
        number=random(100) 
        if(number&lt;=10){
            ///Drop
            randomize()
            number=random(100)
            if(number&lt;=100){
                randomize()
                instance_create(clamp(random(1824),96,1824),clamp(random(955),96,955),obj_health)
            }
        }
        time_passed++
    }
    
    if(!choosed){
        if(time_passed&gt;=0){turret_1.active=true;}
        if(time_passed&gt;=4){turret_2.active=true;}
        if(time_passed&gt;=8){turret_3.active=true;}
        if(time_passed&gt;=12){turret_4.active=true;}
        if(time_passed&gt;=16){turret_5.active=true;}
        if(time_passed&gt;=20){turret_6.active=true;}
        if(time_passed&gt;=24){turret_7.active=true;}
        if(time_passed&gt;=28){turret_8.active=true;}
    }
    
}

if(live&lt;=0){
    destroy_all()
    instance_create(720,720,obj_gotomenubutton)
    instance_create(720,528,obj_resetbutton)
    inst_txt=instance_create(920,240,obj_txt)
    inst_txt.txt="You died. Try again?"
    inst_txt=instance_create(920,304,obj_txt)
    inst_txt.txt="Score: "+string_format(time_passed,5,0)
    choosed=true
    live=5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
if(!choosed&amp;&amp;!obj_gamemanager.sys_paused&amp;&amp;instance_exists(obj_pausebutton)&amp;&amp;!obj_pausebutton.game_paused){
    draw_set_alpha(1)
    draw_set_font(f_1)
    if(live&lt;=3){draw_set_color(c_red)}
    else if(live&lt;=5){draw_set_color(c_orange)}
    else {draw_set_color(c_white)}
    draw_text(8,1020,string(live)+"x")
    draw_set_color(c_white)
    draw_text(300,1020,string_replace_all(string_format(time_passed,5,0)," ","0"))
    if(obj_ultimatecontroller.uselected!=-1){
        draw_set_color(make_color_rgb(255*obj_ultimatecontroller.ucooldown/obj_ultimatecontroller.ucooldowni,255*(1-obj_ultimatecontroller.ucooldown/obj_ultimatecontroller.ucooldowni),0))
        if(obj_ultimatecontroller.ucooldown!=obj_ultimatecontroller.ucooldowni){
            draw_text(600,1020,string_replace_all(string_format(obj_ultimatecontroller.ucooldown,2,0)," ","0"))
        }
        else {
            draw_set_color(c_yellow)
            draw_text(600,1020,string_replace_all(string_format(0,2,0)," ","0")) 
        }  
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
